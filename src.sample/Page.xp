<?xml version="1.0"?>

<xp:page 
    xmlns:xp="http://www.anodyneos.org/xmlns/xp"
    xmlns:fmt="http://www.anodyneos.org/xmlns/xp/fmt"
    xmlns:c="http://www.anodyneos.org/xmlns/xp/core"
    xmlns:fn="http://www.anodyneos.org/xmlns/xp/function"
    xmlns="http://xhtml.com"
>
    <xp:output
        encoding="US-ASCII"
        indent="yes"
        mediaType="text/xml"
        method="xml"
        omitXmlDeclaration="no"
        xhtmlCompat="yes"
    />

    <!--
    <xp:output
        type="xml|html"
        doctype-system="xxx"
        doctype-public="xxx"
        xhtml-compat="true|false">

    <xp:xsl url="xx">
    <xp:xsl url="xx">
    -->

    <xp:content>
        <html>
            <c:if test="${true}">
                <xp:body xmlns:testns="http://www.test.ns.com">
                    Text #1
                    <tag/>
                    Text #2
                    <tag/>
                    Text #3
                </xp:body>
            </c:if>
            <c:if test="${true}">
                Some text
            </c:if>

            <c:if test="${true}">
                \${fn:startsWith('asdf', 'a')} = ${fn:startsWith('asdf', 'a')}
            </c:if>
            <trimTest>
                <xp:attribute name="notrim" trim="false">  &#10;abcd  </xp:attribute>
                <xp:attribute name="notrim2" trim="false">  &#10;${fn:toUpperCase('  abcd  ')}  </xp:attribute>
                <xp:attribute name="notrim3" trim="false">  <a> abcd </a>  </xp:attribute>
                <xp:attribute name="notrim4" trim="false" value="  &#10;abcd  "/>
                <xp:attribute name="trim" trim="true">  &#10;abcd  </xp:attribute>
                <xp:attribute name="trim2" trim="true">  &#10;${fn:toUpperCase('  abcd  ')}  </xp:attribute>
                <xp:attribute name="trim3" trim="true">  <a> abcd </a>  </xp:attribute>
                <xp:attribute name="trim4" trim="true" value="  &#10;abcd  "/>
            </trimTest>
            <h1>====== TEST ATTRIBUTE =====</h1>
            <testElement>
                <c:if test="${true}">
                    <xp:attribute name="att1">
                        <pre>
                            \${fn:startsWith('asdf', 'a')} = ${fn:startsWith('asdf', 'a')}
                        </pre>
                    </xp:attribute>
                </c:if>
            </testElement>


            <h1>====== TEST FUNCTIONS =====</h1>
            <pre>
                \${fn:startsWith('asdf', 'a')} = ${fn:startsWith('asdf', 'a')}
                \${fn:endsWith('asdf', 'b')} = ${fn:endsWith('asdf', 'b')}
                \${fn:join(fn:split('a,b,c', ','), ';')} = ${fn:join(fn:split('a,b,c', ','), ';')}
            </pre>

            <h1>====== NAMESPACE TEST -1 ======</h1>
            <test0 xmlns:ns1="http://origns1.example.com">
                <c:if test="${true}" xmlns:ns1="http://ns1.example.com">
                    <ns1:ns1el/>
                </c:if>
            </test0>

            <h1>====== NAMESPACE TEST 0 ======</h1>
            <test0>
                <c:if test="${true}" xmlns:ns1="http://ns1.example.com">
                    <xp:attribute name="ns1:att1"/>
                    <xp:attribute name="ns1:att2" namespace="http://ns1.example.com"/>
                    <xp:attribute name="ns1:att3" namespace="http://newerns1.example.com"/>
                    <elWithNS1>
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                    </elWithNS1>
                </c:if>
            </test0>
            
            <h1>====== NAMESPACE TEST 0b ======</h1>
            <test0 xmlns:ns1="http://ns1.example.com" ns1:att0="">
                <c:if test="${true}" xmlns:ns1="http://ns1.example.com">
                    <xp:attribute name="ns1:att1"/>
                    <xp:attribute name="ns1:att2" namespace="http://ns1.example.com"/>
                    <xp:attribute name="ns1:att3" namespace="http://newerns1.example.com"/>
                    <elWithNS1>
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                    </elWithNS1>
                </c:if>
            </test0>
            
            <h1>====== NAMESPACE TEST 0c ======</h1>
            <test0 xmlns:ns1="http://origns1.example.com" ns1:att0="">
                <c:if test="${true}" xmlns:ns1="http://ns1.example.com">
                    <xp:attribute name="ns1:att1"/>
                    <xp:attribute name="ns1:att2" namespace="http://ns1.example.com"/>
                    <xp:attribute name="ns1:att3" namespace="http://newerns1.example.com"/>
                    <elWithNS1>
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                    </elWithNS1>
                </c:if>
            </test0>



            <h1>====== NAMESPACE TEST 1 ======</h1>
            <!--
                Output should look like:

                    <noNS1 att1="">
                      <elWithNS1 xmlns:ns1="http://ns1.example.com">
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                      </elWithNS1>
                    </noNS1>
            -->
            <noNS1>
                <c:if test="${true}" xmlns:ns1="http://ns1.example.com">
                    <xp:attribute name="att1"/>
                    <elWithNS1>
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                    </elWithNS1>
                </c:if>
            </noNS1>


            <h1>====== NAMESPACE TEST 2 ======</h1>
            <!--
                Output should look like:

                    <noNS1 att1="">
                      <elWithNS1 xmlns:ns1="http://ns1.example.com">
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                      </elWithNS1>
                    </noNS1>

                *** TODO *** Add to this test an EL function with a namespace
                defined in the yp:if element
            -->
            <noNS1>
                <yp:if test="${true}" xmlns:ns1="http://ns1.example.com" xmlns:yp="http://www.anodyneos.org/xmlns/xp">
                    <yp:attribute name="att1"/>
                    <elWithNS1>
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                    </elWithNS1>
                </yp:if>
            </noNS1>
            
            
            <h1>====== NAMESPACE TEST 3 ======</h1>
            <!--
                Generated code should have phantom calls before and after text
                inside xp:if
            -->
            <noNS1>
                <xp:if test="${true}" xmlns:ns1="http://ns1.example.com">
                    This is some inner text.
                </xp:if>
            </noNS1>
            
            <h1>====== NAMESPACE TEST 4 ======</h1>
            <!--
                Output should look like:

                    <noNS1 att1="">
                      <elWithNS1 xmlns:ns1="http://ns1.example.com">
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                      </elWithNS1>
                    </noNS1>
            -->
            <noNS1>
                <xp:if test="${true}" xmlns:ns1="http://ns1.example.com">
                    <xp:attribute name="att1"/>
                    <elWithNS1>
                        <ns1:innerElWithNS1/>
                        <ns1:innerElWithNS1/>
                    </elWithNS1>
                </xp:if>
            </noNS1>


            <!-- this one should use "ns1", not generate ns0 for the att1 -->
            <!--
            <noNS1>
                <c:if test="${true}" xmlns:ns1="http://ns1.example.com">
                    <xp:attribute name="att1" namespace="http://ns1.example.com"/>
                    <elWithNS1>
                        <ns1:el2WithNS1/>
                        <ns1:el3WithNS1/>
                    </elWithNS1>
                </c:if>
            </noNS1>
            -->

            <!--
            <fmt:timeZone timeZone="America/New_York" e="\${er} ${expr}"/>
            <fmt:timeZone timeZone="America/New_York" e="\${er}\${\${"/>
            <fmt:timeZone timeZone="America/New_York"/>
            <fmt:timeZone timeZone="America/New_York"/>
            <fmt:timeZone timeZone="America/New_York"/>
            <fmt:timeZone timeZone="America/New_York"/>
            <head/>
            <body class="${expr}">
                <h1>
                    Heading...
                    ${myexpression}
                    \$
                    $
                </h1>
                \${ $ \$ asdfasdf
                ${expr1}${expr2}${expr3}
            </body>
            -->
        </html>
        <!--
        <c:set>
            <h1/>
        </c:set>
        <c:set>
            <h1/>
        </c:set>
        -->
    </xp:content>
</xp:page>
